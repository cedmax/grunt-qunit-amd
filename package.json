{
  "name": "grunt-qunit-amd",
  "description": "Grunt plugin to run Qunit tests on your AMD libraries without having to create html pages.",
  "version": "0.0.5",
  "homepage": "https://github.com/cedmax/grunt-qunit-amd",
  "author": {
    "name": "cedmax",
    "email": "marco@cedmax.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cedmax/grunt-qunit-amd.git"
  },
  "bugs": {
    "url": "https://github.com/cedmax/grunt-qunit-amd/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/cedmax/grunt-qunit-amd/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "phantomjs": "~1.9.0-3",
    "node-phantom": "git://github.com/cedmax/node-phantom.git#2d04f4d6b269d08dd9ab96b504d42d053cebbde1",
    "qunitjs": "~1.11.0",
    "requirejs": "2.1.1"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-qunit-amd\n\n> Grunt plugin to run Qunit tests on your AMD libraries without having to create html pages.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-qunit-amd --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-qunit-amd');\n```\n\n## The \"qunit_amd\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `qunit_amd` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  qunit_amd: {\n    unit: {\n\t\tinclude: [\n\t\t\t'test/lib/helper.js',\n\t\t\t'test/lib/sinon-1.5.1.js'\n\t\t],\n\t\ttests: [\n\t\t\t\"test/*Test.js\"\n\t\t]\n\t\trequire: {\n\t\t\tbaseUrl: 'assets/javascripts/src',\n\t\t\tpaths: {\n\t\t\t\tjquery: 'public/javascripts/jquery-2.0.0.min',\n\t\t\t\tmustache: 'public/javascripts/mustache',\n\t\t\t}\n\t\t}\n\t}\n  },\n})\n```\n\n### Options\n\n#### options.include\nType: `Array`\n\nAn array of files to be injected in all the test suites.\n\n#### options.tests\nType: `Array`\n\nAn array of patterns to retrieve the test files.\nTest files are threated as require.js main files\n\nsample test:\n```js\n\nrequire(['jquery', 'myLibrary'], function($, myLib){\n\t'use strict';\n\tQUnit.start();\n\n\tmodule('myLibraryTest', {\n\t\tsetup: function(){\n\t\t\t$(\"<div id='domDependency'></div>\").appendTo(document.body);\n\t\t},\n\t\tteardown: function(){\n\t\t\tdocument.body.innerHTML = '';\n\t\t}\n\t})\n\n\n\ttest('my test', 1, function(){\n\t\tvar myDiv = $('#domDependency');\n\t\tmyLib.setElement(myDiv[0]);\n\t\tequal(myLib.getElement().id, 'domDependency', \"everythings is fine\");\n\t});\n\n});\n```\n\n\n#### options.require\nType: `Object`\n\nRequireJS configuration\nRead the [RequireJS documentation](http://www.requirejs.org/)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Todo\n- update requirejs and load it as a dependency\n\n## Thanks\nThis library exists because I've been working with these guys and I learned a lot of stuff about testing: [Marco Pracucci](https://github.com/pracucci), [Rocco Zanni](https://github.com/roccozanni), [Luca Lischetti](https://github.com/sirlisko)\n",
  "_id": "grunt-qunit-amd@0.0.1",
  "dist": {
    "shasum": "af28e6c77f8d70b22871205a5c03ffe5d2395c83"
  },
  "_from": "grunt-qunit-amd@0.0.1"
}
